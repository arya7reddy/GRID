@mixin column_size(
  $size,
  $columns,
  $gutter
  ){

  $width: 94%;
  $column_width: $width/$columns;

  @include generate_grid($size, $columns, $gutter);

  @for $i from 1 through $columns{

    .col-#{$i}-#{$size} {
      width: $i * $column_width - $gutter !important;
      margin-left: $gutter/2;
      margin-right: $gutter/2;
      display: inline;
      float: left;
    }
  }


  // Hide classes for different view ports.
  @if $size == s {
    .hide-gte-s, .hide-lte-xl, .hide-lte-m, .hide-lte-s{
      display: none !important;
    } 
  } @else if $size == m{
    .hide-gte-m, .hide-lte-m, .hide-gte-s, .hide-lte-xl, {
      display: none !important;
    }
  } @else if $size == xl{
    .hide-gte-xl, .hide-lte-xl, .hide-gte-m, .hide-gte-s{
      display: none !important;
    }
  }
}

@mixin generate_grid(
    $size: xl,
    $columns: 16,
    $gutter: 5%,
    $width: 94%,
    $outer_gutter_width: 3%
  ){

  $column_width: $width/$columns;
  $container_name: ".container_#{$columns}";

  .row{
    width: 100%;
    float: left;
  }

  .nest{
    width: 100%;
    float: left;
  }

  .resume_grid{
    width: 100%;
  }

  #{$container_name} {
    margin-left: auto;
    margin-right: auto;
    width: $width;
    padding-left: $outer_gutter_width;
    padding-right: $outer_gutter_width;
  }

  @for $i from 1 through $columns{

    .col-#{$i} {
      display: inline;
      float: left;
      margin-left: $gutter/2;
      margin-right: $gutter/2;

      #{$container_name} &{
        width: $i * $column_width - $gutter;
      }
    }
    
    .indent-#{$i}-#{$size} {
      position: relative;
      #{$container_name} &{
        left: $i * $column_width;
      }
    }
    .rightIndent-#{$i}-#{$size} {
      position: relative;
      #{$container_name} &{
        left: - $i * $column_width;
      }
    }
    
  }
}